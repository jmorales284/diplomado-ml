# -*- coding: utf-8 -*-
"""TallerFinal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-KezbvZBWtiOTYX26eEv-TozJpVxjBds

"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from scipy import stats

path = "/content/drive/MyDrive/diplo/TallerFinal/titanic.csv"

df = pd.read_csv(path,sep=",")
df

from google.colab import drive
drive.mount('/content/drive')

"""#Null or None data exploration

"""

#Numero de datos
dataNumber = df.shape[0]

#Sacamos Los numeros de datos vacios que hay por columna (En Age 177, en Cabin 687 y en Embarked 2)
for colum in df:
  if colum not in ["Age","Cabin"]:
    print(colum)
    c = df[df[colum].isnull()].shape[0]
    percentage = 1 - c / dataNumber
    print(colum, c, percentage * 100)
  else:
    print(colum)
    c = df[df[colum].isnull()].shape[0]
    percentage = 1 - c / dataNumber
    print(colum, c, percentage * 100)

"""##Clean colum data with less than 30%

---


"""

dfClean = df.iloc[:,[0,1,2,3,4,5,6,7,8,9,11]]
dfClean

"""## Drop rows

if representative data less than 5%, drop rows

###Limpiamos los datos para age y embarked
"""

dfClean1 = dfClean.copy()

dfClean[np.isnan(dfClean['Age']) | dfClean['Embarked'].isnull()]

#Limpiamos los datos nulos de las columnas 'Age' y 'Embarked'
dfClean1 = dfClean[~np.isnan(dfClean['Age']) & ~dfClean['Embarked'].isnull()]

dfClean1[np.isnan(dfClean['Age']) & dfClean['Embarked'].isnull()]

"""#Nominal 2 Number

"""

dfClean2 = dfClean1.copy()
dfClean1

#Cambiamos los valores de Embarked a numeros
# 'S' = 0
# 'C' = 1
# 'Q' = 2
def change(v):
  if (v == 'S'):
    return 0
  elif (v == 'C'):
    return 1
  return 2

dfClean2['Embarked'] = dfClean2['Embarked'].apply(change)

dfClean2

"""##Outliers detection"""

data = stats.zscore(dfClean2['Age'])
data

th = 2

outliers = np.where(np.logical_or(data>th,data<-th))

outliers[0]

dfClean2.iloc[outliers[0],:]

"""###Change data"""

mode = df['Age'].mode()
mode.to_list()[0]
dfClean3 = dfClean2.copy()
dfClean3.iloc[outliers[0],0] = mode.to_list()[0]

"""###IQR age data"""

dfClean4 = dfClean2.copy()
data = dfClean4['Age']
data

q1 = np.percentile(data,25)
q3 = np.percentile(data,75)

iqr = stats.iqr(data)

lb = q1-1.5*iqr
ub = q3+1.5*iqr

outliers = np.where(np.logical_or(data>ub,data<-lb))
outliers

dfClean4.iloc[outliers[0],0] = mode.to_list()[0]